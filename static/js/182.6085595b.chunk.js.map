{"version":3,"file":"static/js/182.6085595b.chunk.js","mappings":"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","sources":["components/CustomTextField/CustomTextField.jsx","components/CustomTypography/CustomTypography.jsx","components/LinkGoBack/LinkGoBack.jsx","components/Form/Form.jsx","views/LogInPage.jsx"],"sourcesContent":["import { TextField } from '@mui/material';\n\nexport const CustomTextField = ({\n  children,\n  required,\n  label,\n  type,\n  name,\n  value,\n  onChange,\n  style,\n  placeholder,\n}) => {\n  return (\n    <TextField\n      required={required}\n      label={label}\n      type={type}\n      name={name}\n      value={value}\n      onChange={onChange}\n      style={style}\n      placeholder={placeholder}\n      sx={{\n        mb: '1.5rem',\n        background: '#040c0e8a',\n        color: '#daa83a',\n        borderRadius: '10px',\n\n        ':hover': {\n          boxShadow:\n            ' 0 0 2px #ffffff, 0 0 10px #ffffff, 0 0 2px #ffffff, 0 0 2px #a37c27, 0 0 2px #a37c27, 0 0 25px #a37c27, 0 0 25px #a37c27, 0 0 50px #a37c27;',\n        },\n      }}\n    >\n      {children}\n    </TextField>\n  );\n};\n","import { Typography } from '@mui/material';\n\nexport const CustomTypography = ({ children, variant, component, style }) => {\n  return (\n    <Typography\n      variant={variant}\n      component={component}\n      style={style}\n      sx={{\n        textAlign: 'center',\n        fontSize: '50px',\n        margin: '50px 0px 30px',\n\n        textShadow:\n          ' 0 0 5px #ffffff, 0 0 15px #ffffff, 0 0 5px #ffffff, 0 0 10px #a37c27, 0 0 20px #a37c27, 0 0 25px #a37c27, 0 0 25px #a37c27, 0 0 50px #a37c27;',\n      }}\n    >\n      {children}\n    </Typography>\n  );\n};\n","import { Link, useLocation } from 'react-router-dom';\nimport { CustomButton } from 'components/Button/Button';\n\nconst LinkGoBack = () => {\n  const location = useLocation();\n\n  return (\n    <Link to={location.state ?? '/'}>\n      <CustomButton type=\"button\" variant=\"contained\">\n        Go back\n      </CustomButton>\n    </Link>\n  );\n};\n\nexport default LinkGoBack;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Box, Container } from '@mui/material';\nimport LinkGoBack from 'components/LinkGoBack/LinkGoBack';\nimport { CustomButton } from 'components/Button/Button';\nimport { CustomTypography } from 'components/CustomTypography/CustomTypography';\nimport { CustomTextField } from 'components/CustomTextField/CustomTextField';\n\nconst Form = ({ title, titleSubmit, register = false, cbSubmit }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    if (name === 'name') setName(value);\n    if (name === 'email') setEmail(value);\n    if (name === 'password') setPassword(value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    register === true\n      ? cbSubmit({ name, email, password })\n      : cbSubmit({ email, password });\n\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <Container>\n      <Box\n        sx={{\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%,-50%)',\n          alignItems: 'center',\n          display: 'flex',\n          flexDirection: 'column',\n        }}\n      >\n        <CustomTypography\n          variant=\"h2\"\n          style={{\n            alignItems: 'center',\n            fontSize: '30px',\n            marginBottom: '30px',\n          }}\n        >\n          {title}\n        </CustomTypography>\n        <form onSubmit={handleSubmit}>\n          <Box\n            sx={{\n              alignItems: 'center',\n              display: 'flex',\n              flexDirection: 'column',\n            }}\n          >\n            {register && (\n              <CustomTextField\n                required\n                label=\"Name\"\n                type=\"text\"\n                name=\"name\"\n                value={name}\n                onChange={handleChange}\n              />\n            )}\n\n            <CustomTextField\n              required\n              type=\"email\"\n              label=\"Email\"\n              name=\"email\"\n              value={email}\n              placeholder=\"Email\"\n              onChange={handleChange}\n            />\n\n            <CustomTextField\n              required\n              type=\"password\"\n              name=\"password\"\n              label=\"Password\"\n              value={password}\n              placeholder=\"Password\"\n              onChange={handleChange}\n            />\n            <CustomButton type=\"submit\" variant=\"contained\">\n              {titleSubmit}\n            </CustomButton>\n          </Box>\n        </form>\n\n        <LinkGoBack />\n      </Box>\n    </Container>\n  );\n};\n\nForm.propTypes = {\n  title: PropTypes.string,\n  titleSubmit: PropTypes.string.isRequired,\n  register: PropTypes.bool,\n  cbSubmit: PropTypes.func.isRequired,\n};\n\nexport default Form;\n","import Form from 'components/Form/Form';\n\nimport { useDispatch } from 'react-redux';\nimport { logInThunk } from 'redux/auth/authOperations';\n\nconst LogInPage = () => {\n  const dispatch = useDispatch();\n\n  const handleFormSubmit = data => dispatch(logInThunk(data));\n\n  return (\n    <>\n      <Form\n        title={'Log in'}\n        titleSubmit={'Log in'}\n        cbSubmit={handleFormSubmit}\n      />\n    </>\n  );\n};\n\nexport default LogInPage;\n"],"names":["CustomTextField","children","required","label","type","name","value","onChange","style","placeholder","sx","mb","background","color","borderRadius","boxShadow","CustomTypography","variant","component","textAlign","fontSize","margin","textShadow","location","useLocation","to","state","title","titleSubmit","register","cbSubmit","useState","setName","email","setEmail","password","setPassword","handleChange","e","target","resetForm","Container","Box","position","top","left","transform","alignItems","display","flexDirection","marginBottom","onSubmit","preventDefault","dispatch","useDispatch","data","logInThunk"],"sourceRoot":""}